// generated with ast extension for cup
// version 0.8
// 1/1/2020 23:36:32


package rs.ac.bg.etf.pp1.ast;

public interface Visitor { 

    public void visit(Unmatched Unmatched);
    public void visit(NumCharBool NumCharBool);
    public void visit(Mulop Mulop);
    public void visit(Matched Matched);
    public void visit(Relop Relop);
    public void visit(FormParameters FormParameters);
    public void visit(MethodDeclarations MethodDeclarations);
    public void visit(FormalParamDecl FormalParamDecl);
    public void visit(StatementList StatementList);
    public void visit(VarPart VarPart);
    public void visit(MethodOrAbstractDecl MethodOrAbstractDecl);
    public void visit(DesignatorStatements DesignatorStatements);
    public void visit(Addop Addop);
    public void visit(Factor Factor);
    public void visit(CondTerm CondTerm);
    public void visit(LocalVarlDeclList LocalVarlDeclList);
    public void visit(AbstractMethodDecl AbstractMethodDecl);
    public void visit(StatList StatList);
    public void visit(DeclList DeclList);
    public void visit(Term Term);
    public void visit(Condition Condition);
    public void visit(ConstDeclList ConstDeclList);
    public void visit(AbstractMethodDeclarations AbstractMethodDeclarations);
    public void visit(ExtendsType ExtendsType);
    public void visit(Conditions Conditions);
    public void visit(VarDeclList VarDeclList);
    public void visit(FormalParamList FormalParamList);
    public void visit(Expr Expr);
    public void visit(MethodOrAbstractDeclList MethodOrAbstractDeclList);
    public void visit(ActPars ActPars);
    public void visit(DesignatorList DesignatorList);
    public void visit(VarDeclLocal VarDeclLocal);
    public void visit(DesignatorStatement DesignatorStatement);
    public void visit(MethodReturnType MethodReturnType);
    public void visit(Decl Decl);
    public void visit(Statement Statement);
    public void visit(CondFact CondFact);
    public void visit(MethodDeclList MethodDeclList);
    public void visit(ModOper ModOper);
    public void visit(DivOper DivOper);
    public void visit(MulOper MulOper);
    public void visit(MinusOp MinusOp);
    public void visit(PlusOp PlusOp);
    public void visit(LessEquals LessEquals);
    public void visit(Less Less);
    public void visit(MoreEquals MoreEquals);
    public void visit(More More);
    public void visit(NotEquals NotEquals);
    public void visit(Equals Equals);
    public void visit(Assignop Assignop);
    public void visit(ParenthesisExpr ParenthesisExpr);
    public void visit(OperatorNewArray OperatorNewArray);
    public void visit(OperatorNewType OperatorNewType);
    public void visit(BoolRef BoolRef);
    public void visit(CharRef CharRef);
    public void visit(IntRef IntRef);
    public void visit(FuncRef FuncRef);
    public void visit(ProcRef ProcRef);
    public void visit(VarRef VarRef);
    public void visit(SingleFactor SingleFactor);
    public void visit(ListTerm ListTerm);
    public void visit(MinusExpr MinusExpr);
    public void visit(SingleTerm SingleTerm);
    public void visit(AddOpExpr AddOpExpr);
    public void visit(CondFactTwoExpr CondFactTwoExpr);
    public void visit(CondFactSingleExpr CondFactSingleExpr);
    public void visit(SingleCondFact SingleCondFact);
    public void visit(ConditionFactorList ConditionFactorList);
    public void visit(ErrorCondition ErrorCondition);
    public void visit(SingleTermCond SingleTermCond);
    public void visit(ConditionTerminalList ConditionTerminalList);
    public void visit(ConditionNotExistsForLoop ConditionNotExistsForLoop);
    public void visit(ConditionExistsForLoop ConditionExistsForLoop);
    public void visit(SingleExpr SingleExpr);
    public void visit(ExpresionList ExpresionList);
    public void visit(SingleDesignator SingleDesignator);
    public void visit(DotDesignator DotDesignator);
    public void visit(ArrayDesignator ArrayDesignator);
    public void visit(Designator Designator);
    public void visit(MinusMinusStatement MinusMinusStatement);
    public void visit(PlusPlusStatement PlusPlusStatement);
    public void visit(FuncCallStatement FuncCallStatement);
    public void visit(ProcCallStatement ProcCallStatement);
    public void visit(ErrorEquals ErrorEquals);
    public void visit(Assignment Assignment);
    public void visit(NoDesignatorStatement NoDesignatorStatement);
    public void visit(StatemetsDesignator StatemetsDesignator);
    public void visit(For For);
    public void visit(Statements Statements);
    public void visit(PrintNumConstStatement PrintNumConstStatement);
    public void visit(PrintNoNumConstStatement PrintNoNumConstStatement);
    public void visit(ReadStatement ReadStatement);
    public void visit(ReturnNoExprStatement ReturnNoExprStatement);
    public void visit(ReturnExprStatement ReturnExprStatement);
    public void visit(ContinueStatement ContinueStatement);
    public void visit(BreakStatement BreakStatement);
    public void visit(ForStatement ForStatement);
    public void visit(IfStatement IfStatement);
    public void visit(StatementDesignator StatementDesignator);
    public void visit(UnmatchedIf UnmatchedIf);
    public void visit(UnmatchedIfElse UnmatchedIfElse);
    public void visit(UnmatchedStatement UnmatchedStatement);
    public void visit(MatchedStatement MatchedStatement);
    public void visit(SingleStatement SingleStatement);
    public void visit(StatementListMore StatementListMore);
    public void visit(NoStatement NoStatement);
    public void visit(ListStatement ListStatement);
    public void visit(ErrorFormalParam ErrorFormalParam);
    public void visit(ArrayParam ArrayParam);
    public void visit(ScalarParam ScalarParam);
    public void visit(SingleFormalParam SingleFormalParam);
    public void visit(FormalParameterList FormalParameterList);
    public void visit(NoFormParams NoFormParams);
    public void visit(FormParams FormParams);
    public void visit(ErrorAbstractDecl ErrorAbstractDecl);
    public void visit(AbstractMethodDeclOk AbstractMethodDeclOk);
    public void visit(MethodVoid MethodVoid);
    public void visit(MethodType MethodType);
    public void visit(MethodDecl MethodDecl);
    public void visit(NoMethodDecl NoMethodDecl);
    public void visit(MethodDeclarationList MethodDeclarationList);
    public void visit(AbstractMethodDeclaration AbstractMethodDeclaration);
    public void visit(MethodDeclaration MethodDeclaration);
    public void visit(NoAbstractAndMethodDeclarations NoAbstractAndMethodDeclarations);
    public void visit(AbstractAndMethodDeclarations AbstractAndMethodDeclarations);
    public void visit(NoAbstractDeclarationsMethod NoAbstractDeclarationsMethod);
    public void visit(AbstractDeclarationsMethods AbstractDeclarationsMethods);
    public void visit(NoMethodDeclaration NoMethodDeclaration);
    public void visit(DeclarationsMethod DeclarationsMethod);
    public void visit(ErrorExtends ErrorExtends);
    public void visit(NoExtends NoExtends);
    public void visit(TypeExtends TypeExtends);
    public void visit(AbstractDecl AbstractDecl);
    public void visit(ClassDecl ClassDecl);
    public void visit(SingleVarDeclLocal SingleVarDeclLocal);
    public void visit(VarDeclLocalList VarDeclLocalList);
    public void visit(NoVarDecl NoVarDecl);
    public void visit(VarDeclarations VarDeclarations);
    public void visit(ErrorVarParticle ErrorVarParticle);
    public void visit(VarArrayPart VarArrayPart);
    public void visit(VarParticle VarParticle);
    public void visit(SingleVarList SingleVarList);
    public void visit(VarDecleclarationList VarDecleclarationList);
    public void visit(VarDecl VarDecl);
    public void visit(BoolInitializer BoolInitializer);
    public void visit(CharInitializer CharInitializer);
    public void visit(NumberInitializer NumberInitializer);
    public void visit(ConstPart ConstPart);
    public void visit(SingleConstPart SingleConstPart);
    public void visit(ConstDeclarationList ConstDeclarationList);
    public void visit(ConstDecl ConstDecl);
    public void visit(ClassDeclaration ClassDeclaration);
    public void visit(AbstractDeclaration AbstractDeclaration);
    public void visit(VarDeclaration VarDeclaration);
    public void visit(ConstDeclaration ConstDeclaration);
    public void visit(NoDeclarations NoDeclarations);
    public void visit(Declarations Declarations);
    public void visit(Type Type);
    public void visit(ProgName ProgName);
    public void visit(Program Program);

}
